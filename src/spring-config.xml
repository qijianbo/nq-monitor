<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd" default-autowire="byName">
    <!-- 自动扫描的包名 -->
    <context:component-scan base-package="com.cyh.monitor">
        <context:exclude-filter type="regex" expression="com.fsj.spring.web.*"/>
    </context:component-scan>
    <!-- 默认的注解映射的支持 -->
    <mvc:annotation-driven />
    <!-- 视图解释类 -->
    <!--<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">-->
        <!--<property name="prefix" value="/WEB-INF/jsp/"/>-->
        <!--<property name="suffix" value=".jsp"/>&lt;!&ndash;可为空,方便实现自已的依据扩展名来选择视图解释类的逻辑  &ndash;&gt;-->
        <!--<property name="viewClass" value="org.springframework.web.servlet.view.JstlView" />-->
    <!--</bean>-->
    <!-- 对静态资源文件的访问-->
    <!--<mvc:resources mapping="/images/**" location="/images/" cache-period="31556926"/>-->
    <!--<mvc:resources mapping="/js/**" location="/js/" cache-period="31556926"/>-->
    <!--<mvc:resources mapping="/css/**" location="/css/" cache-period="31556926"/>-->
    <!--数据源配置-->
    <!--<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">-->
        <!--<property name="driverClassName" value="com.mysql.jdbc.Driver"></property>-->
        <!--<property name="url" value="jdbc:mysql://127.0.0.1:3306/test"></property>-->
        <!--<property name="username" value="root"></property>-->
        <!--<property name="password" value="root"></property>-->
    <!--</bean>-->
    <!--<bean id="sessionFactory" class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">-->
        <!--<property name="dataSource" ref="dataSource"/>-->
        <!--<property name="mappingDirectoryLocations">-->
            <!--<list>&lt;!&ndash; 这里直接映射的pojo类所在的包，简单方便不用没次加一个pojo类都需要到这里来添加 &ndash;&gt;-->
                <!--<value>classpath:com/fsj/spring/model</value>-->
            <!--</list>-->
        <!--</property>-->
        <!--<property name="hibernateProperties">-->
            <!--<props>-->
                <!--<prop key="hibernate.dialect">-->
                    <!--org.hibernate.dialect.MySQLDialect-->
                <!--</prop>-->
                <!--<prop key="hibernate.show_sql">-->
                    <!--true-->
                <!--</prop>-->
            <!--</props>-->
        <!--</property>-->
    <!--</bean>-->
    <!-- 下面是配置声明式事务管理的，个人感觉比用注解管理事务要简单方便 -->
    <!--<bean id="txManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">-->
        <!--<property name="sessionFactory" ref="sessionFactory"></property>-->
    <!--</bean>-->

    <!--<aop:config>-->
        <!--<aop:advisor pointcut="execution(* com.fsj.spring.service.*Service.*(..))" advice-ref="txAdvice"/>-->
    <!--</aop:config>-->

    <!--<tx:advice id="txAdvice" transaction-manager="txManager">-->
        <!--<tx:attributes>-->
            <!--<tx:method name="get*" read-only="true"/>-->
            <!--<tx:method name="query*" read-only="true"/>-->
            <!--<tx:method name="find*" read-only="true"/>-->
            <!--<tx:method name="load*" read-only="true"/>-->
            <!--<tx:method name="*" rollback-for="Exception"/>-->
        <!--</tx:attributes>-->
    <!--</tx:advice>-->
</beans>